schema {
  query: Query
}

"The node interface is implemented by entities that have a global unique identifier."
interface Node {
  id: ID!
}

type Notification implements Node {
  id: ID!
  message: String!
  username: String!
}

"A connection to a list of items."
type NotificationsByUsernameConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo!
  "A list of edges."
  edges: [NotificationsByUsernameEdge!]
  "A flattened list of the nodes."
  nodes: [Notification!]
}

"An edge in a connection."
type NotificationsByUsernameEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: Notification!
}

"A connection to a list of items."
type NotificationsConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo!
  "A list of edges."
  edges: [NotificationsEdge!]
  "A flattened list of the nodes."
  nodes: [Notification!]
}

"An edge in a connection."
type NotificationsEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: Notification!
}

"Information about pagination in a connection."
type PageInfo {
  "Indicates whether more edges exist following the set defined by the clients arguments."
  hasNextPage: Boolean!
  "Indicates whether more edges exist prior the set defined by the clients arguments."
  hasPreviousPage: Boolean!
  "When paginating backwards, the cursor to continue."
  startCursor: String
  "When paginating forwards, the cursor to continue."
  endCursor: String
}

type Query {
  "Fetches an object given its ID."
  node("ID of the object." id: ID!): Node
  "Lookup nodes by a list of IDs."
  nodes("The list of node IDs." ids: [ID!]!): [Node]!
  notificationById(id: ID!): Notification
  notifications("Returns the first _n_ elements from the list." first: Int "Returns the elements in the list that come after the specified cursor." after: String "Returns the last _n_ elements from the list." last: Int "Returns the elements in the list that come before the specified cursor." before: String): NotificationsConnection
  notificationsByUsername(username: String! "Returns the first _n_ elements from the list." first: Int "Returns the elements in the list that come after the specified cursor." after: String "Returns the last _n_ elements from the list." last: Int "Returns the elements in the list that come before the specified cursor." before: String): NotificationsByUsernameConnection
  userByUsername(username: String!): User!
}

type User {
  username: String!
}